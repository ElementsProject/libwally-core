#ifndef LIBSECP256K1_CONFIG_H

#define LIBSECP256K1_CONFIG_H

/* Define if building universal (internal helper macro) */
#cmakedefine AC_APPLE_UNIVERSAL_BUILD @AC_APPLE_UNIVERSAL_BUILD@

/* Define this symbol to compile out all VERIFY code */
#cmakedefine COVERAGE @COVERAGE@

/* Set ecmult gen precision bits */
#cmakedefine ECMULT_GEN_PREC_BITS @ECMULT_GEN_PREC_BITS@

/* Set window size for ecmult precomputation */
#cmakedefine ECMULT_WINDOW_SIZE @ECMULT_WINDOW_SIZE@

/* Define this symbol to enable the ECDH module */
#cmakedefine ENABLE_MODULE_ECDH @ENABLE_MODULE_ECDH@

/* Define this symbol to enable the ECDSA adaptor module */
#cmakedefine ENABLE_MODULE_ECDSA_ADAPTOR @ENABLE_MODULE_ECDSA_ADAPTOR@

/* Define this symbol to enable the ECDSA sign-to-contract module */
#cmakedefine ENABLE_MODULE_ECDSA_S2C @ENABLE_MODULE_ECDSA_S2C@

/* Define this symbol to enable the extrakeys module */
#cmakedefine ENABLE_MODULE_EXTRAKEYS @ENABLE_MODULE_EXTRAKEYS@

/* Define this symbol to enable the NUMS generator module */
#cmakedefine ENABLE_MODULE_GENERATOR @ENABLE_MODULE_GENERATOR@

/* Define this symbol to enable the MuSig module */
#cmakedefine ENABLE_MODULE_MUSIG @ENABLE_MODULE_MUSIG@

/* Define this symbol to enable the Pedersen / zero knowledge range proof
   module */
#cmakedefine ENABLE_MODULE_RANGEPROOF @ENABLE_MODULE_RANGEPROOF@

/* Define this symbol to enable the ECDSA pubkey recovery module */
#cmakedefine ENABLE_MODULE_RECOVERY @ENABLE_MODULE_RECOVERY@

/* Define this symbol to enable the schnorrsig module */
#cmakedefine ENABLE_MODULE_SCHNORRSIG @ENABLE_MODULE_SCHNORRSIG@

/* Define this symbol to enable the surjection proof module */
#cmakedefine ENABLE_MODULE_SURJECTIONPROOF @ENABLE_MODULE_SURJECTIONPROOF@

/* Define this symbol to enable the key whitelisting module */
#cmakedefine ENABLE_MODULE_WHITELIST @ENABLE_MODULE_WHITELIST@

/* Define this symbol if OpenSSL EC functions are available */
#cmakedefine ENABLE_OPENSSL_TESTS @ENABLE_OPENSSL_TESTS@

/* Define this symbol if __builtin_clzll is available */
#cmakedefine HAVE_BUILTIN_CLZLL @HAVE_BUILTIN_CLZLL@

/* Define this symbol if __builtin_popcount is available */
#cmakedefine HAVE_BUILTIN_POPCOUNT @HAVE_BUILTIN_POPCOUNT@

/* Define to 1 if you have the <dlfcn.h> header file. */
#cmakedefine HAVE_DLFCN_H @HAVE_DLFCN_H@

/* Define to 1 if you have the <inttypes.h> header file. */
#cmakedefine HAVE_INTTYPES_H @HAVE_INTTYPES_H@

/* Define this symbol if libcrypto is installed */
#cmakedefine HAVE_LIBCRYPTO @HAVE_LIBCRYPTO@

/* Define this symbol if libgmp is installed */
#cmakedefine HAVE_LIBGMP @HAVE_LIBGMP@

/* Define to 1 if you have the <memory.h> header file. */
#cmakedefine HAVE_MEMORY_H @HAVE_MEMORY_H@

/* Define to 1 if you have the <stdint.h> header file. */
#cmakedefine HAVE_STDINT_H @HAVE_STDINT_H@

/* Define to 1 if you have the <stdlib.h> header file. */
#cmakedefine HAVE_STDLIB_H @HAVE_STDLIB_H@

/* Define to 1 if you have the <strings.h> header file. */
#cmakedefine HAVE_STRINGS_H @HAVE_STRINGS_H@

/* Define to 1 if you have the <string.h> header file. */
#cmakedefine HAVE_STRING_H @HAVE_STRING_H@

/* Define to 1 if you have the <sys/stat.h> header file. */
#cmakedefine HAVE_SYS_STAT_H @HAVE_SYS_STAT_H@

/* Define to 1 if you have the <sys/types.h> header file. */
#cmakedefine HAVE_SYS_TYPES_H @HAVE_SYS_TYPES_H@

/* Define to 1 if you have the <unistd.h> header file. */
#cmakedefine HAVE_UNISTD_H @HAVE_UNISTD_H@

/* Define to the sub-directory where libtool stores uninstalled libraries. */
#cmakedefine LT_OBJDIR @LT_OBJDIR@

/* Name of package */
#cmakedefine PACKAGE @PACKAGE@

/* Define to the address where bug reports for this package should be sent. */
#cmakedefine PACKAGE_BUGREPORT @PACKAGE_BUGREPORT@

/* Define to the full name of this package. */
#cmakedefine PACKAGE_NAME @PACKAGE_NAME@

/* Define to the full name and version of this package. */
#cmakedefine PACKAGE_STRING @PACKAGE_STRING@

/* Define to the one symbol short name of this package. */
#cmakedefine PACKAGE_TARNAME @PACKAGE_TARNAME@

/* Define to the home page for this package. */
#cmakedefine PACKAGE_URL @PACKAGE_URL@

/* Define to the version of this package. */
#cmakedefine PACKAGE_VERSION @SECP256K1_PACKAGE_VERSION@

/* Define to 1 if you have the ANSI C header files. */
#cmakedefine STDC_HEADERS @STDC_HEADERS@

/* Define this symbol to enable x86_64 assembly optimizations */
#cmakedefine USE_ASM_X86_64 @USE_ASM_X86_64@

/* Define this symbol to use a statically generated ecmult table */
#cmakedefine USE_ECMULT_STATIC_PRECOMPUTATION @USE_ECMULT_STATIC_PRECOMPUTATION@

/* Define this symbol if an external (non-inline) assembly implementation is
   used */
#cmakedefine USE_EXTERNAL_ASM @USE_EXTERNAL_ASM@

/* Define this symbol if an external implementation of the default callbacks
   is used */
#cmakedefine USE_EXTERNAL_DEFAULT_CALLBACKS @USE_EXTERNAL_DEFAULT_CALLBACKS@

/* Define this symbol to use the native field inverse implementation */
#cmakedefine USE_FIELD_INV_BUILTIN @USE_FIELD_INV_BUILTIN@

/* Define this symbol to use the num-based field inverse implementation */
#cmakedefine USE_FIELD_INV_NUM @USE_FIELD_INV_NUM@

/* Define this symbol to force the use of the (unsigned) __int128 based wide
   multiplication implementation */
#cmakedefine USE_FORCE_WIDEMUL_INT128 @USE_FORCE_WIDEMUL_INT128@

/* Define this symbol to force the use of the (u)int64_t based wide
   multiplication implementation */
#cmakedefine USE_FORCE_WIDEMUL_INT64 @USE_FORCE_WIDEMUL_INT64@

/* Define this symbol to use the gmp implementation for num */
#cmakedefine USE_NUM_GMP @USE_NUM_GMP@

/* Define this symbol to use no num implementation */
#cmakedefine USE_NUM_NONE @USE_NUM_NONE@

/* Define this symbol to reduce SECP256K1_SURJECTIONPROOF_MAX_N_INPUTS to 16,
   disabling parsing and verification */
#cmakedefine USE_REDUCED_SURJECTION_PROOF_SIZE @USE_REDUCED_SURJECTION_PROOF_SIZE@

/* Define this symbol to use the native scalar inverse implementation */
#cmakedefine USE_SCALAR_INV_BUILTIN @USE_SCALAR_INV_BUILTIN@

/* Define this symbol to use the num-based scalar inverse implementation */
#cmakedefine USE_SCALAR_INV_NUM @USE_SCALAR_INV_NUM@

/* Version number of package */
#cmakedefine VERSION @SECP256K1_PACKAGE_VERSION@

/* Define WORDS_BIGENDIAN to 1 if your processor stores words with the most
   significant byte first (like Motorola and SPARC, unlike Intel). */
#if defined AC_APPLE_UNIVERSAL_BUILD
# if defined __BIG_ENDIAN__
#  define WORDS_BIGENDIAN 1
# endif
#else
# ifndef WORDS_BIGENDIAN
#cmakedefine WORDS_BIGENDIAN @WORDS_BIGENDIAN@
# endif
#endif

#endif /*LIBSECP256K1_CONFIG_H*/
